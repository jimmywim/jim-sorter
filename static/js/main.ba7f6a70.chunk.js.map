{"version":3,"sources":["components/ItemList.jsx","components/NewItemPanel.jsx","components/Ranker.jsx","App.js","reportWebVitals.js","index.js"],"names":["ItemList","props","title","showItems","items","map","item","index","name","rank","NewItemPanel","React","useState","panelWidth","panelPosition","setPanelPosition","userSelection","setUserSelection","closePane","onClick","style","width","height","position","left","toString","top","border","padding","rows","onChange","a","target","value","itemsSelected","split","Ranker","className","contestItems","display","onItem1Click","onItem2Click","onStart","randomInteger","min","max","Math","floor","random","App","setContestItems","isFinished","setIsFinished","allItems","setAllItems","contests","setContests","getNextContest","length","totalGameCount","sortedItems","sort","b","reverse","contestIndex","contestIndex2","arr","p","contestItem1","contestItem2","contestId","slice","c","join","console","log","rankedPair","hasContestBeenRun","filter","margin","itemRows","itemObjects","label","flexDirection","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba7f6a70.chunk.js","sourcesContent":["import React from 'react';\n\nexport function ItemList(props) {\n  return (\n    <div>\n      <p>{props.title}</p>\n      {\n        props.showItems ?\n        props.items.map((item, index) => {\n          return (\n            <div key={index}>{item.name} ({item.rank})</div>\n          )\n        })\n        :\n        <div>Items hidden until game complete</div>\n      }\n    </div>\n  );\n}","import React from 'react';\n\nexport function NewItemPanel(props) {\n  const panelWidth = 300;\n\n  const [panelPosition, setPanelPosition] = React.useState(panelWidth * -1);\n  const [userSelection, setUserSelection] = React.useState('');\n\n  const openPane = () => {\n    setPanelPosition(0);\n  }\n\n  const closePane = () => {\n    setPanelPosition(panelWidth * -1);\n  }\n\n  const acceptList = () => {\n    closePane();\n    props.itemsSelected(userSelection.split(/\\r?\\n/));\n  }\n\n  const userSelectionPasted = (a) => {\n    setUserSelection(a.target.value);\n  }\n\n  return (\n    <div>\n      {!panelPosition <= 0 && <button onClick={openPane}>Set Items to Rank</button>}\n\n      {\n        panelPosition === 0 &&\n        <div style={{\n          width: '300px',\n          height: '100%',\n          position: 'absolute',\n          left: panelPosition.toString() + 'px',\n          top: '0',\n          border: '1px solid black',\n          padding: '20px 0px'\n        }}>\n          <div>Paste a new-line seperate list of items below</div>\n          <textarea\n            rows={30}\n            style={{ width: '95%' }}\n            onChange={userSelectionPasted}\n            value={userSelection}></textarea>\n          <div>\n            <button onClick={acceptList}>OK</button>\n            <button onClick={closePane}>Cancel</button>\n          </div>\n        </div>\n      }\n    </div>\n  );\n}","import './Ranker.css';\n\nexport default function Ranker(props) {\n\n  // const item1Win = () => debounce(props.onItem1Click, 500);\n  // const item2Win = () => debounce(props.onItem2Click, 500);\n\n  const item1Win = () => props.onItem1Click();\n  const item2Win = () => props.onItem2Click();\n\n  return (\n    <div className=\"rankerContainer\">\n      {\n        props.contestItems ?\n          <div style={{\n            display: 'flex'\n          }}>\n            <div className=\"rankTile\" onClick={item1Win}>\n              <span >{props.contestItems[0].name}</span>\n            </div>\n            <div className=\"rankTile\" onClick={item2Win}>\n              <span >{props.contestItems[1].name}</span>\n            </div>\n          </div>\n          :\n          <div className=\"startButton\" onClick={props.onStart}>Start!</div>\n      }\n\n    </div>\n  )\n}","\nimport React from 'react';\nimport './App.css';\nimport { ItemList } from './components/ItemList';\nimport { NewItemPanel } from './components/NewItemPanel';\nimport Ranker from './components/Ranker';\n\nconst items = [\n  {\n    name: \"Item 1\",\n    rank: 0\n  },\n  {\n    name: \"Item 2\",\n    rank: 0\n  },\n  {\n    name: \"Item 3\",\n    rank: 0\n  },\n  {\n    name: \"Item 4\",\n    rank: 0\n  },\n  {\n    name: \"Item 5\",\n    rank: 0\n  },\n  {\n    name: \"Item 6\",\n    rank: 0\n  },\n  {\n    name: \"Item 7\",\n    rank: 0\n  }\n];\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// const f = (a, b) => [].concat(...a.map(d => b.map(e => [].concat(d, e))));\n// const cartesian = (a, b, ...c) => (b ? cartesian(f(a, b), ...c) : a);\n\n\n// (n(n-1)) / 2\n// const totalGameCount = items.flatMap(\n//   (v, i) => items.slice(i + 1).map(w => v + ' ' + w)\n// ).length;\n\n\nconst sortBy = function (arr, p) {\n  return arr.slice(0).sort(function (a, b) {\n    return (a[p] > b[p]) ? 1 : (a[p] < b[p]) ? -1 : 0;\n  });\n}\n\nfunction App() {\n  const [contestItems, setContestItems] = React.useState(null);\n  const [isFinished, setIsFinished] = React.useState(false);\n  const [allItems, setAllItems] = React.useState(items);\n  const [contests, setContests] = React.useState([]);\n\n  const getNextContest = () => {\n    if (isFinished) {\n      return;\n    }\n\n\n    if (contests.length >= totalGameCount()) {\n      setIsFinished(true);\n      return;\n    }\n\n    var sortedItems = allItems.sort((a, b) => a.rank - b.rank).reverse();\n\n    var contestIndex = randomInteger(0, allItems.length - 1);\n    var contestIndex2 = randomInteger(0, allItems.length - 1);\n\n    if (contestIndex === contestIndex2) {\n      return getNextContest();\n    }\n\n\n    let contestItem1 = sortedItems[contestIndex];\n    let contestItem2 = sortedItems[contestIndex2];\n\n    let contestId = sortBy([contestItem1, contestItem2], 'name').map(c => c.name).join(\"-\");\n\n    console.log(\"Contest: \", contestId)\n\n    const rankedPair = [contestItem1, contestItem2];\n\n    if (hasContestBeenRun(contestId)) {\n      console.log(\"Contest has already been run\");\n      return getNextContest();\n    }\n\n    setContests([...contests, contestId]);\n\n    setContestItems(rankedPair);\n  };\n\n  const item1Win = () => {\n    let thisItem = contestItems[0];\n    thisItem.rank++;\n\n    getNextContest();\n\n  };\n\n  const item2Win = () => {\n    let thisItem = contestItems[1];\n    thisItem.rank++;\n\n    getNextContest();\n  };\n\n  const newItemsSelected = (itemRows) => {\n    const itemObjects = itemRows.map((label) => {\n      return {\n        name: label,\n        rank: 0\n      }\n    });\n\n    setAllItems(itemObjects);\n    setContestItems(null);\n    setContests([]);\n    setIsFinished(false);\n  };\n\n  const totalGameCount = () =>{\n    // (n(n-1)) / 2\n\n    return ((allItems.length - 1) * allItems.length) / 2;\n  };\n\n  const hasContestBeenRun = (contestId) => {\n    return contests.filter(c => c === contestId).length > 0;\n  };\n\n  return (\n    <div className=\"App\" style={{\n      width: '100%',\n      margin: '0 auto'\n    }}>\n\n      <div>\n        Game: {contests.length} / {totalGameCount()}\n      </div>\n      <NewItemPanel\n        itemsSelected={newItemsSelected}\n      />\n      {\n        isFinished &&\n        <div>Game complete!</div>\n      }\n      <section style={{\n        display: 'flex',\n        flexDirection: 'column',\n        // justifyContent: 'center ',\n        // alignItems: 'center',\n        width: '800px',\n        height: '800px',\n        margin: '0 auto',\n        paddingTop: '20px'\n      }\n      }>\n        \n        {\n          !isFinished &&\n          <Ranker\n            contestItems={contestItems}\n            onStart={getNextContest}\n            onItem1Click={item1Win}\n            onItem2Click={item2Win}\n          />\n        }\n        <ItemList\n          items={allItems}\n          title=\"The List\"\n          showItems={isFinished} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}